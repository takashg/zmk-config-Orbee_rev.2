#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        JP {
            bindings = <&kp LANG1>;
            key-positions = <20 19>;
        };

        ENG {
            bindings = <&kp LANG2>;
            key-positions = <12 11>;
        };

        OHNISHI {
            bindings = <&tog 6>;
            key-positions = <31 32>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        touch_behavior_1: touch1 {
            compatible = "zmk,behavior-momentary";
            label = "TouchKey1";
            bindings = <&kp A>;
        };

        touch_behavior_2: touch2 {
            compatible = "zmk,behavior-momentary";
            label = "TouchKey2";
            bindings = <&kp B>;
        };

        touch_behavior_3: touch3 {
            compatible = "zmk,behavior-momentary";
            label = "TouchKey3";
            bindings = <&mo 1>;
        };

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp Q               &kp W             &kp E    &kp R           &kp T                                    &kp Y        &kp U            &lt 1 I    &kp O         &kp P
&mt LEFT_CONTROL A  &mt LEFT_SHIFT S  &lt 4 D  &mt LEFT_ALT F  &kp G        &none        &kp C_VOL_UP   &kp H        &mt RIGHT_ALT J  &lt 4 K    &mt RSHIFT L  &mt RIGHT_CONTROL MINUS
&mt ESCAPE Z        &kp X             &kp C    &kp V           &kp B        &none        &kp C_VOL_DN   &kp N        &kp M            &kp COMMA  &kp DOT       &kp LEFT_WIN
&none               &none             &none    &lt 1 CAPSLOCK  &lt 2 SPACE  &lt 3 TAB    &kp BACKSPACE  &lt 5 ENTER                                            &none
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        SHORTCUTS {
            bindings = <
&none                &kp LC(W)            &kp LA(UP_ARROW)  &kp LA(F4)       &none                          &none   &none               &kp LG(UP_ARROW)  &kp RC(C)      &none
&kp LS(LC(TAB))      &kp LA(LEFT)         &kp LG(TAB)       &kp LA(RIGHT)    &kp LC(TAB)  &trans    &trans  &none   &kp LG(LEFT_ARROW)  &kp LG(E)         &kp LG(RIGHT)  &kp LEFT_CONTROL
&kp LA(PRINTSCREEN)  &kp LG(PRINTSCREEN)  &kp LG(LS(S))     &kp PRINTSCREEN  &none        &trans    &trans  &none   &kp LC(V)           &kp LG(M)         &kp LC(X)      &none
&none                &none                &none             &trans           &trans       &trans    &trans  &trans                                                       &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUMBER {
            bindings = <
&kp F11  &kp F12  &kp COLON  &kp INSERT  &none                      &kp EQUAL   &kp N7        &kp N8        &kp N9        &kp PLUS
&kp F1   &kp F2   &kp F3     &kp F4      &kp F5   &trans    &trans  &kp N0      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&kp F6   &kp F7   &kp F8     &kp F9      &kp F10  &trans    &trans  &kp PERIOD  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK
&none    &none    &none      &trans      &trans   &trans    &trans  &trans                                                &kp SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOLS {
            bindings = <
&none            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE              &kp GRAVE                         &none          &kp HASH   &kp SQT    &kp DOUBLE_QUOTES  &kp CARET
&kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH  &kp DOLLAR  &trans    &trans      &kp AMPERSAND  &kp SLASH  &kp COLON  &kp SEMICOLON      &kp QUESTION
&kp AT_SIGN      &kp LESS_THAN         &kp GREATER_THAN       &kp PERCENT           &none       &trans    &trans      &none          &kp TILDE  &kp COMMA  &kp PERIOD         &kp UNDERSCORE
&none            &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans                &trans      &trans    &kp DELETE  &trans                                                  &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE_BLUETOOTH {
            bindings = <
&bt BT_SEL 0      &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &none   &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &none
&kp LEFT_CONTROL  &kp C_VOL_DN   &kp C_MUTE    &kp C_VOL_UP  &none         &trans    &trans  &none   &mkp MB1      &none       &mkp MB2      &kp RIGHT_CONTROL
&kp RIGHT_SHIFT   &kp C_BRI_DEC  &none         &kp C_BRI_UP  &none         &trans    &trans  &none   &mkp MB4      &none       &mkp MB5      &kp RIGHT_SHIFT
&bt BT_CLR_ALL    &bt BT_CLR     &none         &trans        &trans        &trans    &trans  &trans                                          &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ARROW {
            bindings = <
&none             &none                &kp PAGE_UP    &none    &none                     &none   &none           &kp UP_ARROW    &none          &none
&kp LEFT_CONTROL  &mt LEFT_SHIFT HOME  &kp PAGE_DOWN  &kp END  &none   &trans    &trans  &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT      &kp LEFT_CONTROL
&kp LEFT_SHIFT    &kp LC(SPACE)        &kp LS(SPACE)  &none    &none   &trans    &trans  &none   &none           &kp RC(PLUS)    &kp RC(MINUS)  &kp RIGHT_SHIFT
&none             &none                &none          &trans   &trans  &trans    &trans  &trans                                                 &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        OHNISHI_LAYOUT {
            bindings = <
&kp Q               &kp L             &kp U    &kp COMMA       &kp PERIOD                                    &kp F        &kp W            &kp R    &kp Y              &kp P
&mt LEFT_CONTROL E  &mt LEFT_SHIFT I  &lt 4 A  &mt LEFT_ALT O  &kp MINUS      &kp C_BRI_UP    &kp C_VOL_UP   &kp K        &mt RIGHT_ALT T  &lt 4 N  &mt RIGHT_SHIFT S  &mt RIGHT_CONTROL H
&mt ESCAPE Z        &kp X             &kp C    &kp V           &kp SEMICOLON  &kp C_BRI_DN    &kp C_VOL_DN   &kp G        &lt 1 D          &kp M    &kp J              &mt LEFT_WIN B
&none               &none             &none    &lt 1 CAPSLOCK  &lt 2 SPACE    &lt 3 TAB       &kp BACKSPACE  &lt 5 ENTER                                               &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
